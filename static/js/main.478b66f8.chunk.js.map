{"version":3,"sources":["components/Global.jsx","components/Status.jsx","components/Item.jsx","components/List.jsx","components/Code.jsx","components/Title.jsx","components/Container.jsx","components/Button.js","components/TextArea.js","example.js","components/Edit.js","App.js","serviceWorker.js","index.js"],"names":["Global","createGlobalStyle","styles","done","background","color","deploy","wip","todo","Status","styled","span","status","style","css","Item","li","List","ul","Code","Title","h2","Container","div","Button","button","TextArea","textarea","Edit","show","onSubmit","example","JSON","stringify","ex","useState","value","setValue","e","preventDefault","formData","FormData","target","get","name","onChange","priority","sort","a","b","indexOf","sortSprint","sprint","Object","entries","App","setState","edit","setEdit","onClick","json","parse","console","error","map","code","title","s","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.478b66f8.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nconst Global = createGlobalStyle`\n  @import url(\"https://fonts.googleapis.com/css?family=Roboto&display=swap\");\n  html, body {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n  }\n\n  body {\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    color: #eee;\n    background-color: #393e46;\n  }\n\n`\n\nexport default Global\n","import styled, { css } from 'styled-components'\n\nconst styles = {\n  done: {\n    background: '#4ecca3',\n    color:  '#2a735b',\n  },\n  deploy: {\n    background: '#ccc64e',\n    color: '#736f2a',\n  },\n  wip: {\n    background: '#4ecccc',\n    color: '#2a5c73',\n  },\n  todo: {\n    background: '#cc694e',\n    color: '#733c2a',\n  }\n}\n\nconst colors = ({ status }) => {\n  const style = styles[status] || status.todo\n\n  return css`\n    background-color: ${style.background};\n    color: ${style.color};\n  `\n}\n\n\nconst Status = styled.span`\n  padding: 4px 8px\n  border-radius: 4px\n  text-transform: uppercase;\n  font-size: .65rem\n  margin-top: 16px;\n  ${colors}\n`\n\nexport default Status\n","import styled from 'styled-components'\nimport Status from './Status'\n\nconst Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background-color: #232931;\n  border-radius: 4px;\n  padding: 16px;\n  box-shadow: 2px 2px 5px #333;\n  margin-bottom: 24px\n  list-style: none;\n  transform: scale(1);\n  transition: transform .4s ease-in-out;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  ${Status} {\n    align-self: flex-end\n  }\n`\n\nexport default Item\n","import styled from 'styled-components'\nimport Item from './Item'\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 0;\n\n  ${Item} {\n    flex-basis: calc(33.3333% - 16px);\n    box-sizing: border-box;\n    margin: 8px;\n  }\n`\n\nexport default List;\n","import styled from 'styled-components'\n\nconst Code = styled.span`\n  color: #4ecca3;\n`\nexport default Code\n","import styled from 'styled-components'\n\nconst Title = styled.h2`\n  font-size: 1rem;\n`\n\nexport default Title;\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n padding: 16px 48px;\n`\n\nexport default Container\n","import styled from 'styled-components'\n\nconst Button = styled.button`\n  background-color: #232931;\n  border-radius: 4px;\n  color: #eee;\n  padding: 8px 16px;\n  border: 0;\n  transition: background-color .42s ease;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #4ecca3;\n  }\n`\n\nexport default Button;\n","import styled from 'styled-components'\n\nconst TextArea = styled.textarea`\n  background-color: #232931;\n  border-radius: 4px;\n  color: #eee;\n\n  width: 100%\n  height: 300px;\n  margin: 16px 0;\n  border: 0\n\n  font-family: monospace\n  font-size: 1.1rem\n`\n\nexport default TextArea\n","export default {\n  \"AC1474\": {\n    \"title\": \"example\",\n    \"status\": \"done\"\n  },\n\n  \"AC1480\": {\n    \"title\": \"EXAMPLE\",\n    \"status\": \"wip\"\n  },\n\n  \"AC1518\": {\n    \"title\": \"EXAMPLE\",\n    \"status\": \"deploy\"\n\n  },\n  \"MAIN1946\": {\n    \"title\": \"EXAMPLE\",\n    \"status\": \"todo\"\n  }\n}\n","import React, { useState } from 'react'\n\nimport Button from './Button'\nimport TextArea from './TextArea'\n\nimport ex from '../example'\n\nconst Edit = ({ show, onSubmit }) => {\n  const example = JSON.stringify(ex, null, 2)\n  const [value, setValue] = useState(example)\n\n  if (!show) return null\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const formData = new FormData(e.target)\n    onSubmit(formData.get('sprint') || example)\n  }\n\n  const handleChange = ({ target }) => setValue(target.value)\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextArea\n        name=\"sprint\"\n        onChange={handleChange}\n        value={value || example}\n      />\n      <Button>Enviar</Button>\n    </form>\n  )\n}\n\nexport default Edit\n","import React, { useState } from 'react';\n\nimport Global from './components/Global'\nimport List from './components/List'\nimport Item from './components/Item'\nimport Code from './components/Code'\nimport Title from './components/Title'\nimport Status from './components/Status'\nimport Container from './components/Container'\nimport Button from './components/Button'\nimport Edit from './components/Edit'\n\n// import sprint from './sprint'\n\nconst priority = [\n  'done',\n  'deploy',\n  'wip',\n  'todo'\n]\n\nconst sort = ([ka, { status: a }], [kb, { status: b }]) =>\n  priority.indexOf(a) - priority.indexOf(b)\n\nconst sortSprint = (sprint) => Object.entries(sprint)\n  .sort(sort)\n\nfunction App() {\n  const [ sprint, setState ] = useState(null)\n  const [ edit, setEdit ] = useState(false)\n\n  const toogleEdit = () => setEdit(!edit)\n\n  const handleSubmit = (value) => {\n    try {\n      const json = JSON.parse(value)\n      if (sprint === json) return\n\n      setState(json)\n    } catch(e) {\n      console.error(e)\n    }\n  }\n\n  return (\n    <Container>\n      <Global />\n      <h1>Sign-up Growth - Sprint Review</h1>\n      <Button onClick={toogleEdit}>Edit</Button>\n\n      <Edit show={edit || !sprint} onSubmit={handleSubmit} />\n\n      {sprint && (\n        <List>\n          {sortSprint(sprint).map(([code, { title, status: s }]) => (\n            <Item>\n              <Code>{code}</Code>\n              <Title>{title}</Title>\n              <Status status={s}>{s}</Status>\n            </Item>\n          ))}\n        </List>\n      )}\n    </Container>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}