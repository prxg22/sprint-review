{"version":3,"sources":["components/Global.jsx","components/Status.jsx","components/Item.jsx","components/List.jsx","components/Code.jsx","components/Title.jsx","components/Container.jsx","sprint.js","App.js","serviceWorker.js","index.js"],"names":["Global","createGlobalStyle","Status","styled","span","status","Item","li","List","ul","Code","Title","h2","Container","div","AC1474","title","AC1432","AC1430","AC1480","AC1481","AC1483","AC1478","AC1498","AC1518","AC1454","AC1473","AC1499","MAIN1674","MAIN3363","CHUW07","CHUW08","CHUW09","CHUW11","CHUW10","MAIN1946","priority","sort","a","b","indexOf","sortSprint","sprint","Object","entries","App","map","code","s","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2iBAEA,IAeeA,EAfAC,YAAH,K,2MCAZ,IAuCeC,EATAC,IAAOC,KAAV,IA9BO,SAAC,GAClB,OADiC,EAAbC,QAElB,IAAK,OACH,MAAO,UACT,IAAK,SACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,OACH,MAAO,UACT,QACE,MAAO,YAIC,SAAC,GACb,OAD4B,EAAbA,QAEb,IAAK,OACH,MAAO,UACT,IAAK,SACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,OACH,MAAO,UACT,QACE,MAAO,a,0dCzBb,IAuBeC,EAvBFH,IAAOI,GAAV,IAkBNL,G,+PClBJ,IAaeM,EAbFL,IAAOM,GAAV,IAMNH,G,0FCPJ,IAGeI,EAHFP,IAAOC,KAAV,K,2FCAV,IAIeO,EAJDR,IAAOS,GAAV,K,6FCAX,IAIeC,EAJGV,IAAOW,IAAV,KCFA,GACbC,OAAQ,CACNC,MAAO,uDACPX,OAAQ,QAEVY,OAAQ,CACND,MAAO,oDACPX,OAAQ,QAEVa,OAAQ,CACNF,MAAO,oDACPX,OAAQ,QAEVc,OAAQ,CACNH,MAAO,oCACPX,OAAQ,OAEVe,OAAQ,CACNJ,MAAO,kCACPX,OAAQ,OAGVgB,OAAQ,CACNL,MAAO,+CACPX,OAAQ,QAGViB,OAAQ,CACNN,MAAO,4FACPX,OAAQ,QAGVkB,OAAQ,CACNP,MAAO,0FACPX,OAAQ,OAGVmB,OAAQ,CACNR,MAAO,oCACPX,OAAQ,UAGVoB,OAAQ,CACNT,MAAO,mCACPX,OAAQ,QAGVqB,OAAQ,CACNV,MAAO,mEACPX,OAAQ,QAGVsB,OAAQ,CACNX,MAAO,4CACPX,OAAQ,QAEVuB,SAAU,CACRZ,MAAO,kDACPX,OAAQ,UAEVwB,SAAU,CACRb,MAAO,mBACPX,OAAQ,QAGVyB,OAAQ,CACNd,MAAO,kCACPX,OAAQ,QAGV0B,OAAQ,CACNf,MAAO,kCACPX,OAAQ,QAGV2B,OAAQ,CACNhB,MAAO,gDACPX,OAAQ,QAGV4B,OAAQ,CACNjB,MAAO,qCACPX,OAAQ,QAGV6B,OAAQ,CACNlB,MAAO,kCACPX,OAAQ,QAGV8B,SAAU,CACRnB,MAAO,mCACPX,OAAQ,SCjFN+B,EAAW,CACf,OACA,SACA,MACA,QAGIC,EAAO,SAAC,EAAD,0BAAgBC,GAAhB,UAAQjC,QAAR,mBAAqCkC,GAArC,UAA6BlC,QAA7B,OACX+B,EAASI,QAAQF,GAAKF,EAASI,QAAQD,IAEnCE,EAAa,SAACC,GAAD,OAAYC,OAAOC,QAAQF,GAC3CL,KAAKA,IAoBOQ,MAlBf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,8DACA,kBAAC,EAAD,KACGJ,EAAWC,GAAQI,IAAI,mCAAEC,EAAF,YAAU/B,EAAV,EAAUA,MAAegC,EAAzB,EAAiB3C,OAAjB,OACtB,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAO0C,GACP,kBAAC,EAAD,KAAQ/B,GACR,kBAAC,EAAD,CAAQX,OAAQ2C,GAAIA,SCtBZC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.9bf52c83.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nconst Global = createGlobalStyle`\n  @import url(\"https://fonts.googleapis.com/css?family=Roboto&display=swap\");\n  html, body {\n    margin: 0;\n    padding: 0\n  }\n\n  body {\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    color: #eee;\n    background-color: #393e46;\n  }\n`\n\nexport default Global\n","import styled from 'styled-components'\n\nconst background = ({ status }) => {\n  switch(status) {\n    case 'done':\n      return '#4ecca3'\n    case 'deploy':\n      return '#ccc64e'\n    case 'wip':\n      return '#4ecccc'\n    case 'todo':\n      return '#cc694e'\n    default:\n      return '#4ecca3'\n  }\n}\n\nconst color = ({ status }) => {\n  switch(status) {\n    case 'done':\n      return '#2a735b'\n    case 'deploy':\n      return '#736f2a'\n    case 'wip':\n      return '#2a5c73'\n    case 'todo':\n      return '#733c2a'\n    default:\n      return '#2a735b'\n  }\n}\n\nconst Status = styled.span`\n  padding: 4px 8px\n  border-radius: 4px\n  background-color: ${background}\n  color: ${color}\n  text-transform: uppercase;\n  font-size: .65rem\n`\n\nexport default Status\n","import styled from 'styled-components'\nimport Status from './Status'\n\nconst Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background-color: #232931;\n  border-radius: 4px\n  padding: 16px\n  margin-bottom: 24px\n  list-style: none;\n  box-shadow: 2px 2px 5px #333;\n  transform: scale(1);\n  transition: transform .4s ease-in-out;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  ${Status} {\n    align-self: flex-end\n  }\n`\n\nexport default Item\n","import styled from 'styled-components'\nimport Item from './Item'\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 0;\n\n  ${Item} {\n    flex-basis: calc(33.3333% - 16px);\n    box-sizing: border-box;\n    margin: 8px;\n  }\n`\n\nexport default List;\n","import styled from 'styled-components'\n\nconst Code = styled.span`\n  color: #4ecca3;\n`\nexport default Code\n","import styled from 'styled-components'\n\nconst Title = styled.h2`\n  font-size: 1rem;\n`\n\nexport default Title;\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n padding: 16px 48px;\n`\n\nexport default Container\n","export default {\n  AC1474: {\n    title: 'Ajustes página de Informação sobre telefone',\n    status: 'done'\n  },\n  AC1432: {\n    title: '[SlackBot] Mensagem inicial de convite ao Gympass',\n    status: 'done',\n  },\n  AC1430: {\n    title: '[SlackBot] Mensagem inicial de convite ao Gympass',\n    status: 'done',\n  },\n  AC1480: {\n    title: 'Referral Program - Banner na Home',\n    status: 'wip',\n  },\n  AC1481: {\n    title: 'Referral Program - Landing Page',\n    status: 'wip'\n\n  },\n  AC1483: {\n    title: 'Referral Program - Alteração no signup',\n    status: 'done'\n\n  },\n  AC1478: {\n    title: 'Ajuste evento \"class_searched\", “last gym checked in\" e “last gym page visited\"',\n    status: 'done'\n\n  },\n  AC1498: {\n    title: 'Inclusão dos campos de CPF, email e matrícula no evento de page view do main-flow',\n    status: 'wip'\n\n  },\n  AC1518: {\n    title: 'Issues with SSO to European users',\n    status: 'deploy'\n\n  },\n  AC1454: {\n    title: 'Religar Nemo para resto do mundo',\n    status: 'done'\n\n  },\n  AC1473: {\n    title: 'Revisão e inclusão de eventos (page_view sem viewer_token)',\n    status: 'done'\n\n  },\n  AC1499: {\n    title: 'Evento abrir chat para não associados.',\n    status: 'done'\n  },\n  MAIN1674: {\n    title: 'Disable \"Your plan is waiting for you\" for Gyms',\n    status: 'deploy'\n  },\n  MAIN3363: {\n    title: 'Email validation',\n    status: 'done'\n\n  },\n  CHUW07: {\n    title: 'Update SASS components - Alerts',\n    status: 'done'\n\n  },\n  CHUW08: {\n    title: 'Update SASS components - Button',\n    status: 'done'\n\n  },\n  CHUW09: {\n    title: 'Update SASS components - Card and CardActions',\n    status: 'done'\n\n  },\n  CHUW11: {\n    title: 'Update SASS components - FooterNav',\n    status: 'done'\n\n  },\n  CHUW10: {\n    title: 'Remove client access to cookies',\n    status: 'done'\n\n  },\n  MAIN1946: {\n    title: 'Erro no servidor ao logar no APP',\n    status: 'todo',\n  }\n}\n","import React from 'react';\n\nimport Global from './components/Global'\nimport List from './components/List'\nimport Item from './components/Item'\nimport Code from './components/Code'\nimport Title from './components/Title'\nimport Status from './components/Status'\nimport Container from './components/Container'\n\nimport sprint from './sprint'\nconst priority = [\n  'done',\n  'deploy',\n  'wip',\n  'todo'\n]\n\nconst sort = ([ka, { status: a }], [kb, { status: b }]) =>\n  priority.indexOf(a) - priority.indexOf(b)\n\nconst sortSprint = (sprint) => Object.entries(sprint)\n  .sort(sort)\n\nfunction App() {\n  return (\n    <Container>\n      <Global />\n      <h1>Sign-up Growth - Sprint Review</h1>\n      <List>\n        {sortSprint(sprint).map(([code, { title, status: s }]) => (\n          <Item>\n            <Code>{code}</Code>\n            <Title>{title}</Title>\n            <Status status={s}>{s}</Status>\n          </Item>\n        ))}\n      </List>\n    </Container>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}